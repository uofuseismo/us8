# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1 
jobs:
  compile-deploy-job:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: quay.io/uuss/us8base
    resource_class: small
    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Buildah login"
          command: |
            buildah login -u="$QUAY_ROBOT_USER" -p="$QUAY_ROBOT_PASSWORD" quay.io
      - run:
          name: "Configure code"
          command: |
            if [ -d build ]; then
               rm -rf build
            fi
            mkdir build
            cd build
            cmake .. -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/us8
      - run:
          name: "Build the code"
          command: |
            cd build
            # resource class small has 1 vcpu and medium has 2
            make -j 1
      - run:
          name: "Install the code"
          command: |
            cd build
            make install
      #- run:
      #     name: "Test the code"
      #     command: |
      #      cd build
      #      export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/us8/lib:/usr/local/lib
      #      ctest --verbose
      - run:
           name: "Package code"
           command: |
             cd build
             mkdir -p /tmp/artifacts
             cpack -B /tmp/artifacts
             rm -rf /tmp/artifacts/_CPack_Packages
      - store_artifacts:
          path: /tmp/artifacts
      #- run:
      #    name: "Push latest container"
      #    command: |
      #      #echo ${QUAY_ROBOT_USER}
      #      #buildah login -u="$QUAY_ROBOT_USER" -p="$QUAY_ROBOT_PASSWORD" quay.io
      #      cd build
      #      ls
      #      make us8-deb
      #      buildah info
      #      buildah --storage-driver=vfs --isolation=chroot bud -t us8executor:latest -f ./Dockerfile.deb
      #      #make buildah
      #      buildah --storage-driver=vfs push us8executor quay.io/uuss/us8executor
    # End steps
  # End compile job
  #deploy-job:
  #  resource_class: small
  #  # Add steps to the job
  #  # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
  #  steps:
  #    - run:
  #        name: "Test who is there"
  #        command: |
  #          pwd
  #          ls 
  #          ls /tmp/artifacts
    

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  compile-workflow: 
    jobs:
      - compile-deploy-job



